generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       BigInt   @id
  class                    Class
  isNotifyingLessonUpdates Boolean  @default(true)
  isGettingDailySchedule   Boolean  @default(false)
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
}

enum Class {
  CLASS_11A
  CLASS_11B
}

model Analytics {
  id            String   @id @default(uuid())
  scheduleClass Class
  scheduleDate  DateTime @db.Date
  count         BigInt   @default(1)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([scheduleClass, scheduleDate])
  @@index([scheduleClass, scheduleDate])
  @@index([createdAt])
}

model Settings {
  id                  String   @id @default(uuid())
  isDistanceEducation Boolean  @default(false)
  isTechnicalWorks    Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Conference {
  id                    String                @id
  originalConferenceUrl String                @db.Text
  scheduleClass         Class
  scheduleDate          DateTime              @db.Date
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  analytics             ConferenceAnalytics[]

  @@unique([originalConferenceUrl, scheduleClass, scheduleDate])
  @@index([originalConferenceUrl, scheduleClass, scheduleDate])
}

model ConferenceAnalytics {
  id           String     @id @default(uuid())
  conference   Conference @relation(fields: [conferenceId], references: [id], onDelete: Cascade)
  conferenceId String
  deviceType   String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
